//"User-Defined String Library: Reimplementation of Standard String Functions in C"
int my_strlen(const char *p)
{
        int len=0;
        for(len=0;p[len];len++);
        return len;
}

void my_strcpy(char *dt,const char *sr)//sr->source dt->destination
{

        int i;

        for(i=0;sr[i];i++)//He
        {
                dt[i]=sr[i];//He
        }

        dt[i]='\0';

}

void my_strncpy(char *dt,const char *sr,const int j)//sr->source dt->destination
{
        int i=0;
        for(i=0;i<j;i++)
        {
                dt[i]=sr[i];
        }

        dt[i]='\0';

}

int my_strcmp(const char *s1,const char *s2)
{
        int i=0;

        for(i=0;s1[i]||s2[i];i++)
                if(s1[i]!=s2[i])
                        break;
        int t;
        t=s1[i]-s2[i];
        return t;
}

int my_strncmp(const char *s1,const char *s2,int j)
{
        int i=0,c=0;

        for(i=0;i<j;i++)
                if(s1[i]!=s2[i])
                {
                        c++;
                        break;
                }

        if(c==0)
                i--;

        int t;
        t=s1[i]-s2[i];
        return t;
}

void my_strcat(char *dt,const char *sr)
{
        int i=0,j=0;

        for(i=0;dt[i];i++);

        for(j=0;sr[j];i++,j++)
        {
                dt[i]=sr[j];
        }

        dt[i]='\0';
}

void my_strncat(char *dt,const char *sr,int k)
{
        int i=0,j=0;

        for(i=0;dt[i];i++);

        for(j=0;j<k;i++,j++)
        {
                dt[i]=sr[j];
        }

        dt[i]='\0';
}


char * my_strchr(char *s,const char ch)
{
        int i=0;
        char *p;
        for(i=0;s[i];i++)
        {
                if(s[i]==ch)
                {
                        p=&s[i];
                        return p;
                }
        }

        return 0;
}

char * my_strrchr(char *s,const char ch)
{
        int i=0;
        char *p;
        i=my_strlen(s);
        for( ;i>=0;i--)
                if(s[i]==ch)
                {
                        p=&s[i];
                        return p;
                }
        return 0;
}

char * my_strstr(char *m,const char *s)
{

        int i,j=0,k;
        char *p;

        for(i=0;m[i];i++)

        if(m[i]==s[j])
        {
                p=&m[i];

                for(k=i;s[j];j++,k++)
                        if(m[k]!=s[j])
                                break;

                if(s[j]=='\0')
                        return p;
        }

        return 0;
}
void my_strlwr(char *s)
{
        int i;
        for (i=0;s[i];i++)
                if(s[i]>='A'&&s[i]<='Z')
                        s[i]=s[i]+32;
}
void my_strupr(char *s)
{
        int i;
        for (i=0;s[i];i++)
                if (s[i]>='a'&&s[i]<='z')
                        s[i]=s[i]-32;
}
void my_strrev(char *s)
{
        int len = my_strlen(s)-1,i;

        char temp;

        for (i=0;i<len;i++,len--)
        {
                temp = s[i];
                s[i] = s[len];
                s[len] = temp;
        }
}